/**
 * @file     lambdas_main.cpp
 * @author   Student Name
 * @date     Mar 21, 2019
 * John Quan
 *
 *
 * Practice using lambda functions
 */


#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <iterator>
#include <utility>
#include <vector>
#include <string>

#include "lambdas.hpp"

int main() {

// TODO: REQUIRED
// Create a vector<pair<size_t, string>> to enumerate
// each string in the WIKIPEDIA_CPP string vector.

std::vector<std::pair<std::size_t, std::string> > wikiString;
std::vector<std::pair<std::size_t, std::string> > sortWikiString;
int size = WIKIPEDIA_CPP.size();

for (int i=0; i<size; i++)
{
wikiString.push_back( make_pair(i,WIKIPEDIA_CPP[i]) );
sortWikiString.push_back( make_pair(i,WIKIPEDIA_CPP[i]) );
}

std::vector<std::pair<std::size_t, std::string> >::iterator iter1;
std::vector<std::pair<std::size_t, std::string> >::iterator iter2;

// TODO: REQUIRED
// Use std::sort with a comparison lambda function that sorts
// the vector pairs with the first member in descending order.

std::sort(sortWikiString.begin(),sortWikiString.end(),[](const std::pair<std::size_t,std::string> &a, const std::pair<std::size_t,std::string> &b) -> bool
{
return (a.first > b.first);
});

// TODO: REQUIRED
// Use printVectorPairs() to print the vector

std::cout << "First of vector pair descending" << std::endl;
std::string output = printVectorPairs(sortWikiString.begin(),sortWikiString.end());
std::cout << output.c_str() << std::endl;
output.clear();

// TODO: ADDITIONAL 1
// Use std::sort with a comparison lambda function that sorts
// the vector pairs with the second member in ascending order.

std::sort(sortWikiString.begin(),sortWikiString.end(),[](const std::pair<std::size_t,std::string> &a, const std::pair<std::size_t,std::string> &b) -> bool
{
return (a.second < b.second);
});

// TODO: ADDITIONAL 1
// Use printVectorPairs() to print the vector

std::cout << "Second of vector pair ascending" << std::endl;
output = printVectorPairs(sortWikiString.begin(),sortWikiString.end());
std::cout << output.c_str() << std::endl;

// TODO: ADDITIONAL 2
// Use std::find_if with a comparison lambda function that prints
// the vector pairs where the pair's second.length() > 15.
// Print the vector as described in the lab.

iter2 = wikiString.begin();
iter1 = wikiString.begin();
std::cout << " > 15" << std::endl;

while(iter1 < wikiString.end())
{
iter1 = std::find_if(iter2,wikiString.end(),[](const std::pair<std::size_t,std::string> &a)
{
if(a.second.length() > 15)
{
std::cout << "{" << a.first << " "<< a.second << "}" << std::endl;
return a.second.length() > 15;
}
});
iter2 = ++iter1;
}
return 0;

}

